#!/bin/sh

### BEGIN INIT INFO
# Provides:  %%NXS_TPL_P_NAME%%
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the %%NXS_TPL_P_NAME%%
# Description:       starts %%NXS_TPL_P_NAME%% using start-stop-daemon
### END INIT INFO

CFG_PATH="/etc/%%NXS_TPL_P_NAME%%/%%NXS_TPL_P_NAME%%.conf"
PID_FILE="/var/run/%%NXS_TPL_P_NAME%%/%%NXS_TPL_P_NAME%%.pid"

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/%%NXS_TPL_P_NAME%%
NAME=%%NXS_TPL_P_NAME%%
DESC=%%NXS_TPL_P_NAME%%

# Include %%NXS_TPL_P_NAME%% defaults if available
if [ -r /etc/default/%%NXS_TPL_P_NAME%% ]; then
. /etc/default/%%NXS_TPL_P_NAME%%
fi

test -x $DAEMON || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

%%NXS_TPL_P_UPCASE_NAME%%_OPTS=$%%NXS_TPL_P_UPCASE_NAME%%_OPTS"-c $CFG_PATH"

# Check if the ULIMIT is set in /etc/default/%%NXS_TPL_P_NAME%%
if [ -n "$ULIMIT" ]; then
# Set the ulimits
ulimit $ULIMIT
fi

VERBOSE="yes"

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	
	if [ ! -d `dirname $PID_FILE` ];
	then
		mkdir -p `dirname $PID_FILE`
	fi
	
	start-stop-daemon --start --quiet --pidfile $PID_FILE --exec $DAEMON --test -- $%%NXS_TPL_P_UPCASE_NAME%%_OPTS > /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PID_FILE --exec $DAEMON -- $%%NXS_TPL_P_UPCASE_NAME%%_OPTS 2>/dev/null \
		|| return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PID_FILE --name $NAME
	RETVAL="$?"

	sleep 1
	return "$RETVAL"
}

case "$1" in
	start)
		[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
		do_start
		case "$?" in
			0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
			2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		esac
		;;
	stop)
		[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
		do_stop
		case "$?" in
			0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
			2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
		esac
		;;
	restart)
		log_daemon_msg "Restarting $DESC" "$NAME"

		do_stop
		case "$?" in
			0|1)
				do_start
				case "$?" in
					0)
						log_end_msg 0
						;;
					1)
						log_end_msg 1 # Old process is still running
						;;
					*)
						log_end_msg 1 # Failed to start
						;;
				esac
				;;
			*)
				# Failed to stop
				log_end_msg 1
				;;
		esac
		;;
	status)
		status_of_proc -p $PID_FILE "$DAEMON" "$NAME" && exit 0 || exit $?
		;;
	*)
		echo "Usage: $NAME {start|stop|force-stop|restart|status}" >&2
		exit 3
		;;
esac
